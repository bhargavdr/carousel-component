extensionsToTry:{code navigation, 
code spellchecker, 
react native code generator, 
rest client, turbo console log, regex previewer
}

AI NLP : brush up

Figma extension that builds react native code


import { useState } from 'react';
import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';
import {
  faChevronLeft,
  faChevronRight,
} from '@fortawesome/free-solid-svg-icons';
import PropTypes from 'prop-types';
import data from '../data.json';

function Carousel({
  containerBackgroundColor,
  descriptionBackgroundColor,
  buttonColor,
  imageHeadingColor,
  headingColor,
}) {
  const [currentImageIndex, setCurrentImageIndex] = useState(0);

  const images = data.map((image) => image.src);
  const imageLinks = data.map((image) => image.link);
  const imageHeadings = data.map((image) => image.heading);
  const imageDescriptions = data.map((image) => image.description);

  const handleClickNext = () => {
    setCurrentImageIndex((currentImageIndex + 1) % images.length);
  };

  const handleClickPrev = () => {
    setCurrentImageIndex(
      currentImageIndex === 0 ? images.length - 1 : currentImageIndex - 1,
    );
  };

  const imgStyle = {
    borderRadius: '50%',
    position: 'relative',
    zIndex: '3',
  };

  const prevImgStyle = {
    ...imgStyle,
    position: 'relative',
    left: '20%',
    zIndex: '2',
    transform: 'scale(0.7)',
  };
  const firstImgStyle = {
    ...imgStyle,
    position: 'relative',
    left: '45%',
    zIndex: '1',
    transform: 'scale(0.4)',
  };

  const nextImgStyle = {
    ...imgStyle,
    position: 'relative',
    right: '20%',
    zIndex: '2',
    transform: 'scale(0.7)',
  };
  const lastImgStyle = {
    ...imgStyle,
    position: 'relative',
    right: '45%',
    zIndex: '1',
    transform: 'scale(0.4)',
  };
  const carouselStyle = {
    display: 'flex',
    justifyContent: 'center',
    alignItems: 'center',
    width: '22rem', // 350px / 16px = 21.875rem
  };
  const divStyle = {
    display: 'flex',
    justifyContent: 'center',
    alignItems: 'center',
    width: '23rem', // 370px / 16px = 23.125rem
    height: 'fitContent',
  };

  const containerStyle = {
    margin: '0 auto',
    display: 'flex',
    flexDirection: 'column',
    alignItems: 'center',
    backgroundColor: containerBackgroundColor,
    width: '28rem', // 450px / 16px = 28.125rem
    height: '25rem', // 400px / 16px = 25rem
    borderRadius: '1.25rem', // 20px / 16px = 1.25rem
  };

  const descriptionStyle = {
    display: 'flex',
    flexDirection: 'column',
    alignItems: 'center',
    backgroundColor: descriptionBackgroundColor,
    color: 'white',
    width: '19rem', // 300px / 16px = 18.75rem
    height: 'fitContent',
    borderRadius: '1.25rem', // 20px / 16px = 1.25rem
    marginTop: '0.625rem', // 10px / 16px = 0.625rem
    padding: '0 2rem 1rem 2rem', // 30px / 16px = 1.875rem, 15px / 16px = 0.938rem
    fontSize: '0.75rem', // 12px / 16px = 0.75rem
    textAlign: 'center',
  };

  Carousel.propTypes = {
    containerBackgroundColor: PropTypes.string.isRequired,
    descriptionBackgroundColor: PropTypes.string.isRequired,
    buttonColor: PropTypes.string.isRequired,
    imageHeadingColor: PropTypes.string.isRequired,
    headingColor: PropTypes.string.isRequired,
  };

  return (
    <div className="container" style={containerStyle}>
      <h1 style={{ color: headingColor }}>Recommended Courses</h1>
      <div className="carousel-container" style={carouselStyle}>
        <button
          type="button"
          style={{ color: buttonColor }}
          onClick={handleClickPrev}
        >
          <FontAwesomeIcon icon={faChevronLeft} />
        </button>
        <div className="image-carousel carousel-slide" style={divStyle}>
          <img
            src={data[(currentImageIndex - 2 + data.length) % data.length].src}
            alt={data[(currentImageIndex - 2 + data.length) % data.length].heading}
            style={firstImgStyle}
          />
          <img
            src={data[(currentImageIndex - 1 + data.length) % data.length].src}
            alt={data[(currentImageIndex - 1 + data.length) % data.length].heading}
            style={prevImgStyle}
          />
          <a href={data[currentImageIndex].link}>
            <img
              src={data[currentImageIndex].src}
              alt={data[currentImageIndex].heading}
              style={imgStyle}
            />
          </a>
          <img
            src={data[(currentImageIndex + 1) % data.length].src}
            alt={data[(currentImageIndex + 1) % data.length].heading}
            style={nextImgStyle}
          />
          <img
            src={data[(currentImageIndex + 2) % data.length].src}
            alt={data[(currentImageIndex + 2) % data.length].heading}
            style={lastImgStyle}
          />
        </div>
        <button
          type="button"
          style={{ color: buttonColor }}
          onClick={handleClickNext}
        >
          <FontAwesomeIcon icon={faChevronRight} />
        </button>
      </div>
      <a href={imageLinks[currentImageIndex]}>
        <div style={descriptionStyle}>
          <h2 style={{ color: imageHeadingColor }}>
            {imageHeadings[currentImageIndex]}
          </h2>
          {imageDescriptions[currentImageIndex]}
        </div>
      </a>
    </div>
  );
}

export default Carousel;
